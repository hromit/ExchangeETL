<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.romit</groupId>
    <artifactId>ExchangeETL</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <spark.version>2.3.2</spark.version>
        <kafka.version>2.1.0</kafka.version>
        <scala.version.major>2.11</scala.version.major>
        <scala.version.minor>8</scala.version.minor>
        <scala.version>${scala.version.major}.${scala.version.minor}</scala.version>
        <hive.warehouse.connector.version>1.0.0.3.1.0.0-78</hive.warehouse.connector.version>
    </properties>

    <repositories>

       <!-- <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
        </repository> -->

        <!--<repository>
            <id>hortonworks</id>
            <url>https://repo.hortonworks.com/content/repositories/releases/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </releases>
        </repository>-->

    </repositories>

       <dependencies>
        <!--kafka-->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
        </dependency>

        <!--spark-->

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.version.major}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.version.major}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.version.major}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-kafka-0-10_2.11</artifactId>
            <version>2.2.2</version>
        </dependency>

        <!--others-->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.10</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.1</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.9</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_2.11</artifactId>
            <version>2.9.9</version>
        </dependency>

       <!-- <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>5.2.2</version>
        </dependency> -->

        <dependency>
            <groupId>za.co.absa</groupId>
            <artifactId>abris_2.11</artifactId>
            <version>2.2.2</version>
        </dependency>

        <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>spark-json-schema_2.11</artifactId>
            <version>0.6.1</version>
        </dependency>

        <!-- llap -->
       <!-- <dependency>
            <groupId>com.hortonworks.hive</groupId>
            <artifactId>hive-warehouse-connector_2.11</artifactId>
            <version>${hive.warehouse.connector.version}</version>
            <scope>provided</scope>
        </dependency> -->

           <!--  For S3 Hadoop -->
           <!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk -->
           <dependency>
               <groupId>com.amazonaws</groupId>
               <artifactId>aws-java-sdk</artifactId>
               <version>1.7.4</version>
           </dependency>

           <!-- https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-aws -->
           <dependency>
               <groupId>org.apache.hadoop</groupId>
               <artifactId>hadoop-aws</artifactId>
               <version>2.7.3</version>
           </dependency>

           <!-- Unit Test -->
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.11</artifactId>
            <version>3.2.0-SNAP10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalacheck</groupId>
            <artifactId>scalacheck_2.11</artifactId>
            <version>1.14.0</version>
            <scope>test</scope>
        </dependency>

        <!-- Dependencies For KStreams -->
           <dependency>
               <groupId>org.apache.kafka</groupId>
               <artifactId>kafka-streams</artifactId>
               <version>2.3.0</version>
           </dependency>

           <!-- <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>5.2.2</version>
            </dependency> -->

           <!-- https://mvnrepository.com/artifact/io.confluent/kafka-streams-avro-serde -->
          <!-- <dependency>
               <groupId>io.confluent</groupId>
               <artifactId>kafka-streams-avro-serde</artifactId>
               <version>5.2.1</version>
           </dependency> -->


           <dependency>
               <groupId>com.github.potix2</groupId>
               <artifactId>spark-google-spreadsheets_2.11</artifactId>
               <version>0.6.3</version>
           </dependency>

           <!-- https://mvnrepository.com/artifact/com.johnsnowlabs.nlp/spark-nlp -->
           <dependency>
               <groupId>com.johnsnowlabs.nlp</groupId>
               <artifactId>spark-nlp_2.11</artifactId>
               <version>2.4.4</version>
           </dependency>

           <!-- https://mvnrepository.com/artifact/org.json4s/json4s-ext -->
           <dependency>
               <groupId>org.json4s</groupId>
               <artifactId>json4s-ext_2.11</artifactId>
               <version>3.5.3</version>
           </dependency>


           <!-- https://mvnrepository.com/artifact/org.apache.spark/spark-mllib -->
           <dependency>
               <groupId>org.apache.spark</groupId>
               <artifactId>spark-mllib_2.11</artifactId>
               <version>2.3.2</version>
           </dependency>

           <!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz -->
           <dependency>
               <groupId>org.quartz-scheduler</groupId>
               <artifactId>quartz</artifactId>
               <version>2.3.0</version>
           </dependency>


           <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
           <dependency>
               <groupId>org.jsoup</groupId>
               <artifactId>jsoup</artifactId>
               <version>1.11.3</version>
           </dependency>

           <!-- https://mvnrepository.com/artifact/com.typesafe.akka/akka-actor -->
           <dependency>
               <groupId>com.typesafe.akka</groupId>
               <artifactId>akka-actor_2.11</artifactId>
               <version>2.3.8</version>
           </dependency>


           <!-- https://mvnrepository.com/artifact/org.asynchttpclient/async-http-client -->
           <dependency>
               <groupId>org.asynchttpclient</groupId>
               <artifactId>async-http-client</artifactId>
               <version>2.10.1</version>
           </dependency>

           <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver -->
           <dependency>
               <groupId>org.seleniumhq.selenium</groupId>
               <artifactId>selenium-chrome-driver</artifactId>
               <version>4.0.0-alpha-3</version>
           </dependency>

           <!-- https://mvnrepository.com/artifact/edu.stanford.nlp/stanford-corenlp -->
           <dependency>
               <groupId>edu.stanford.nlp</groupId>
               <artifactId>stanford-corenlp</artifactId>
               <version>3.5.1</version>
           </dependency>

           <dependency>
               <groupId>edu.stanford.nlp</groupId>
               <artifactId>stanford-corenlp</artifactId>
               <version>3.5.1</version>
               <classifier>models</classifier>
           </dependency>




       </dependencies>

    <build>
        <plugins>
            <plugin>
               <groupId>net.alchim31.maven</groupId>
               <artifactId>scala-maven-plugin</artifactId>
               <version>3.2.2</version>
               <executions>
                   <execution>
                       <goals>
                           <goal>compile</goal>
                           <goal>testCompile</goal>
                       </goals>
                   </execution>
               </executions>
               <configuration>
                   <scalaVersion>${spark.version}</scalaVersion>
               </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- plugin to create java classes from avro -->
           <!-- <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>1.8.2</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/avro</sourceDirectory>
                            <outputDirectory>src/main/java</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin> -->


            <!-- Create fat jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>streaming.streams.testScala</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>assemble-all</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>


</project>